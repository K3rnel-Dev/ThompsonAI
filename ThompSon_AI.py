import os
import json
import aiogram
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from aiogram.types import ParseMode, ReplyKeyboardMarkup, KeyboardButton, InputFile
from aiogram.dispatcher.filters import Text
import openai
import sqlite3

openai.api_key = "YOUR_OPEN_AI_KEY"

bot = Bot(token="YOUR_BOT_TOKEN")
dp = Dispatcher(bot)

#  –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
conn = sqlite3.connect('users.db')
c = conn.cursor()
c.execute('''CREATE TABLE IF NOT EXISTS users
             (id INTEGER PRIMARY KEY, username TEXT)''')
conn.commit()


# –ö–æ–º–∞–¥–Ω—ã
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    #  –ø–∞–ø–∫–∞ —Å –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    folder_name = str(message.from_user.id)
    os.makedirs(folder_name, exist_ok=True)

    with open('images/sticker.gif', 'rb') as sticker:
        sticker = InputFile(sticker)
        await bot.send_animation(message.chat.id, sticker, caption=f'[~ZuckerAI~]\n–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üë§\n–Ø –ò—Å—Å–∫—É—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–µ–∫—Ç ThompSon AI\n–ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –≤ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É Telegram –∫–æ–¥–µ—Ä–æ–º K3RNEL-DEV\n[–î–æ—Å—Ç—É–ø–Ω—ã–µ –ö–æ–º–∞–Ω–¥—ã]\n/help - –ü–æ–º–æ—â—å\n/–ê–≤—Ç–æ—Ä - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –ê–≤—Ç–æ—Ä–µ\n–¢—ã –º–æ–∂–µ—à—å –∑–∞–¥–∞—Ç—å –∞–±—Å–æ–ª—é—Ç–Ω–æ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –Ω–µ–π—Ä–æ—Å–µ—Ç—å –æ—Ç–≤–µ—Ç–∏—Ç—å —Ç–µ–±–µ –Ω–∞ –Ω–µ–≥–æ!')

@dp.message_handler(commands=['help'])
async def send_help(message: types.Message):
    with open('images/anonymous.gif', 'rb') as stick_help:
        sticker = InputFile(stick_help)
        await bot.send_animation(message.chat.id, sticker, caption=f'üë§Name:{message.from_user.first_name}\nüëÅ‚Äçüó®Id:{message.chat.id}\nüìï:–≠—Ç–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏—Å—Å–∫—É—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–µ–∫—Ç ThompSon AI –≤ –Ω–µ–π –≤—ã –º–æ–∂–µ—Ç–µ –≤–≤–æ–¥–∏—Ç—å –ª—é–±–æ–π –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å –∏ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –æ—Ç–≤–µ—Ç –∫–∞–∫–æ–π –±—ã –≤–æ–ø—Ä–æ—Å –Ω–µ-–±—ã–ª —Å–ª–æ–∂–Ω—ã–º')


#–ù–∞—á–∞–ª–æ
@dp.message_handler(Text(equals=['–ö—Ç–æ —Ç—ã', '–∫—Ç–æ —Ç—ã', '–∏–º—è', '–∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç', '–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç', '–ö—Ç–æ —Ç–µ–±—è —Å–æ–∑–¥–∞–ª', '–ö—Ç–æ —Ç–≤–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫', '–∫—Ç–æ —Ç–µ–±—è —Å–æ–∑–¥–∞–ª', '—Ç–≤–æ–µ –∏–º—è' '–¢–≤–æ–µ –ò–º—è', '–∞ –∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç', '–ê –∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç']))
async def who_are_you(message: types.Message):
    with open('images/about.gif', 'rb') as gif:
        gif_data = InputFile(gif)
        await bot.send_animation(message.chat.id, animation=gif_data, caption='–Ø –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–µ–∫—Ç ThompSon Ai\n–°–æ–∑–¥–∞–Ω–Ω—ã–π –Ω–∞ –±–∞–∑–µ OPEN-AI –∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –≤ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É-Telegram\nCreated by K3RNEL-DEV')


@dp.message_handler(text='/–ê–≤—Ç–æ—Ä')
async def who_am_i(message: types.Message):
    await message.reply(' **[~coder]\n–ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ –∏ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º K3rnel-Dev\n–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –Ω–∞ API  –æ—Ç OpenAI**', parse_mode=ParseMode.MARKDOWN)
#–ö–æ–Ω–µ—Ü


@dp.message_handler()
async def generate_text(message: types.Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ username —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = message.from_user.id
    username = message.from_user.username
    if username is not None:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º username –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        c.execute("INSERT OR IGNORE INTO users (id, username) VALUES (?, ?)", (user_id, username))
        conn.commit()

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ JSON-—Ñ–∞–π–ª
    folder_name = str(user_id)
    file_name = os.path.join(folder_name, 'chat.json')
    with open(file_name, 'a') as f:
        json.dump({
            'user': user_id,
            'message': message.text,
            'bot_response': None
        }, f, ensure_ascii=False)

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
    response = openai.Completion.create(
        engine="text-davinci-003",
        prompt=f"{message.text}:",
        temperature=0.9,
        max_tokens=750,
        top_p=1,
        frequency_penalty=0.0,
        presence_penalty=0.6,
        stop=[" Human:", " AI:"]
    )

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞ –≤ JSON-—Ñ–∞–π–ª
    with open(file_name, 'a') as f:
        json.dump({
            'user': None,
            'message': None,
            'bot_response': response.choices[0].text
        }, f, ensure_ascii=False)

    await message.reply(response.choices[0].text, parse_mode=ParseMode.HTML)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
